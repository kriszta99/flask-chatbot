# -*- coding: utf-8 -*-
"""Copy of Weboldal_informacio_leszedese_tisztitasa.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IU_5NogghL_4kSrcnsNZa3xJmJcQLN47
"""

#!pip install -q -U google-genai

#!pip install requests beautifulsoup4 markdownify

import requests
from bs4 import BeautifulSoup
from markdownify import markdownify as md
from urllib.parse import urljoin, urlparse

def url_to_markdown(url):
    try:
        # 1. Letölti az oldal tartalmát
        response = requests.get(url, timeout=10)
        response.raise_for_status()

        # 2. Kinyeri a HTML-tartalmat
        html = response.text
        soup = BeautifulSoup(html, 'html.parser')
        body = soup.body
        if body is None:
            raise ValueError("❌ Az oldal nem tartalmaz <body> elemet.")

        # 3. A domain gyökere (https://ms.sapientia.ro/)
        parsed = urlparse(response.url)
        base_root = f"{parsed.scheme}://{parsed.netloc}/"
        print(f"ℹ️ Domain gyökere: {base_root}")

        # 4. Keresés a <div id="nright"> elemben
        nright_div = soup.find('div', {'id': 'nright'})
        if nright_div:
            # 5. Az összes relatív <a> és <img> link teljes URL-re hozása ezen a div-en belül
            for tag in nright_div.find_all(['a', 'img']):
                attr = 'href' if tag.name == 'a' else 'src'
                if tag.has_attr(attr):
                    val = tag[attr]
                    # Ha a link nem kezdődik http/https-el, akkor kiegészítjük a teljes URL-t
                    if not val.startswith(('http://', 'https://')):
                        tag[attr] = urljoin(base_root, val)

                    # Az URL-t a link vagy kép () között helyezni el, és szóköz a végén
                    tag[attr] = f"{tag[attr]} "  # Csak a teljes URL a kerek zárójelben és szóköz a végén

        # 6. A teljes HTML átalakítása Markdown formátumba
        markdown = md(str(body), heading_style="ATX")

        return markdown

    except Exception as error:
        print(f"⚠️ Hiba történt az URL feldolgozása során: {url}")
        print(f"Részletek: {error}")
        return ""

#url = "https://ms.sapientia.ro/hu/a-karrol/rolunk/kuldetes"
#url = "https://ms.sapientia.ro/hu/a-karrol/rolunk/magunkrol"
#url = "https://ms.sapientia.ro/hu/a-karrol/rolunk/munkatarsak"
#url = "https://ms.sapientia.ro/hu/a-karrol/rolunk/munkatarsak/dekani-hivatal_"
#url = "https://ms.sapientia.ro/hu/a-karrol/rolunk/munkatarsak/gazdasagi-osztaly_"
#url = "https://ms.sapientia.ro/hu/a-karrol/rolunk/munkatarsak/adminisztracio_"
#url = "https://ms.sapientia.ro/hu/a-karrol/rolunk/munkatarsak/konyvtar__"
#url = "https://ms.sapientia.ro/hu/a-karrol/rolunk/szervezeti-abra"
#url = "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/kari-vezetok"
#url = "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/kari-tanacs"
url = "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok"
markdown_szoveg = url_to_markdown(url)

print(markdown_szoveg)  # Itt láthatod a Markdown-tartalmat

from google import genai
client = genai.Client(api_key="AIzaSyCLIFWdK7JZX8LnP8liIJ3UMop4Gfa6qPQ")

response = client.models.generate_content(
    model="gemini-2.0-flash-thinking-exp-01-21",
    contents = [f"""
    Feladat:
    Tisztítsd meg az alábbi markdown szöveget. A fő tartalmat tartsd meg.
    Linkek a következő formátumban: téma (https://link)

    Törlendő részek:
    - navigációs menük és url-jei
    - Lábléc
    - Jogi információk
    - Ismétlődő cimek
    - Hirek
    - Képek


    Szöveg:
    {markdown_szoveg}
    """]

)
print(response.text)

file_path = '/content/markdown_output.md'

with open(file_path, 'a') as f:
  f.write(response.text)

# Fájl elérési útja
file_path

list_urls = [
             "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok/minosegbiztositasi-bizottsag-",
             "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok/akkreditacios-bizottsag",
             "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok/tanulmanyi-es-kredit-bizottsag-",
             "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok/kari-osztondij-tanacs",
             "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok/kari-erasmus-bizottsag",
             "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok/erasmus-szocialis-osztondij-bizottsag",
             "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok/tudomanyos-kutatas-bizottsaga",
             "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok/kari-beszerzesi-elbiralo-bizottsag-",
             "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok/kari-tudomanyos-diakkori-tanacs",
             "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok/orarendkeszito-bizottsag",
             "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok/kari-valasztasi-bizottsag",
             "https://ms.sapientia.ro/hu/a-karrol/a-kar-vezetese/bizottsagok/kari-hallgatoi-valasztasi-bizottsag"
           ]

from google import genai

def web_scraping_clean(list_urls):
  for item_url in list_urls:
    markdown_szoveg = url_to_markdown(item_url)
    if markdown_szoveg:
      client = genai.Client(api_key="AIzaSyCLIFWdK7JZX8LnP8liIJ3UMop4Gfa6qPQ")
      response = client.models.generate_content(
          model="gemini-2.0-flash-thinking-exp-01-21",
          contents = [f"""
          Feladat:
          Tisztítsd meg az alábbi markdown szöveget. A fő tartalmat tartsd meg.

          Törlendő részek:
          - navigációs menük és url-jei
          - Lábléc és kapcsolodó linkek
          - Jogi információk
          - Ismétlődő sorok
          - Hirek
          - Képek
          - Linkek
          - Ismétlődő cimek


          Szöveg:
          {markdown_szoveg}
          """]
          #contents=[f"Tisztítsd meg a markdown formátumú szöveget: {markdown_szoveg}. Tartsd meg a fő tartalmat, eltávolítva minden nem informatív rész, mint navigációs menü és menü linkjei, lábléce, jogi információ, és ismétlődő szöveg. A dokumentumlinkek a következő formátumban: téma (https://link)."]
      )
      # response objektumnak van-e text attribútuma
      if response and  hasattr(response, 'text'):
          print(response.text)
          file_path = '/content/markdown_bizottsagok.md'

          with open(file_path, 'a') as f:
            f.write(response.text)
      else:
          print(f"Hiba történt a válasz feldolgozása során: {response}")

web_scraping_clean(list_urls)

{markdown_szoveg}